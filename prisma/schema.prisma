generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum AgentType {
  HUMAN
  AI
}

enum AgentMode {
  ACTIVE
  PASSIVE
}

enum EvaluatorType {
  HUMAN
  AI
}

enum RoleType {
  USER
  EVALUATOR
  ADMIN
}

model Company {
  id        String   @id
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  agents    Agent[]

  @@map("companies")
}

model Agent {
  id        String     @id
  name      String
  type      AgentType
  mode      AgentMode
  companyId String     @map("company_id")
  createdAt DateTime   @default(now()) @map("created_at")
  company   Company    @relation(fields: [companyId], references: [id])
  calls     Call[]

  @@map("agents")
}

model Call {
  id           String       @id
  agentId      String       @map("agent_id")
  startTime    DateTime     @map("start_time")
  duration     Int
  endedReason  String       @map("ended_reason")
  recordingUrl String       @map("recording_url")
  summary      String?
  outcome      String?
  createdAt    DateTime     @default(now()) @map("created_at")
  agent        Agent        @relation(fields: [agentId], references: [id])
  evaluations  Evaluation[]

  @@map("calls")
}

model Evaluation {
  id                String         @id
  callId           String         @map("call_id")
  evaluatorType    EvaluatorType  @map("evaluator_type")
  evaluatorName    String         @map("evaluator_name")
  score            Float
  reasoningSentiment String       @map("reasoning_sentiment")
  reasoningProtocol String        @map("reasoning_protocol")
  reasoningOutcome String         @map("reasoning_outcome")
  qaCheck          Boolean        @map("qa_check")
  comments         String?
  createdAt        DateTime       @default(now()) @map("created_at")
  call             Call           @relation(fields: [callId], references: [id])

  @@map("evaluations")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Role {
  id          String   @id @default(uuid())
  name        RoleType
  description String?
  users       User[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("roles")
} 